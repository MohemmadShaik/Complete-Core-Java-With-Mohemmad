Here we will rewrite all 4 parts of the Program 2 in a single java file called (MyFuncGitBranches.java) using git branches such that
Sum of two numbers program divided into branches :
main     ==> Part 1 : without using function (i.e Simple basic sum program ).
feature1 ==> Part 2 : using function but without passing any arguments and return type.
feature2 ==> Part 3 : using function by passing the arguments but with no return type.
feature3 ==> Part 4 : using function by passing the arguments and with return type

//Program 2: Addition of 2 numbers with and with out using functions

//part 1 : main branch ==> without using function (i.e Simple basic sum program ).

import java.util.Scanner;

public class MyFuncGitBranches {
    public static void hello(){
        System.out.println("Hello World Am Hazarudin here exploring function/methods  concepts.....");
    }
    public static void main(String[] args) {
        //hello();

        Scanner sc = new Scanner(System.in);
        System.out.print("Enter a value : ");
        int a = sc.nextInt();
        System.out.print("Enter b value : ");
        int b = sc.nextInt();
        int sum = a + b;
        System.out.println("Sum of "+a+" and "+b+" is : "+sum);
        sc.close();

    }
}


Note : 1. we are in main branch
       2. git commit -m "Part 1 : without using function (i.e Simple basic sum program )."

//Part 2 : feature1 branch ==> using function but without passing any arguments and return type.

import java.util.Scanner;

public class MyFuncGitBranches {

    public static void hello(){
        System.out.println("Hello World Am Hazarudin here exploring function/methods  concepts.....");
    }
     //function with no arguments and no return type.
    public static void calculateSum(){
        Scanner sc = new Scanner(System.in);
        System.out.print("Enter a value : ");
        int a = sc.nextInt();
        System.out.print("Enter b value : ");
        int b = sc.nextInt();
        int sum = a + b;
        System.out.println("Sum of "+a+" and "+b+" is : "+sum);
        sc.close();
    }
    public static void main(String[] args) {
        //hello();
        calculateSum(); //function calling
    }
}

/* Note : 1. We are in feature1 branch.
          2. Updated the MyFuncGitBranches.txt with feature1 branch.
          3. git commit -m "Part 2 : feature1 ==> using function without passing any arguments and return type completed successfully."
*/

//Part 3 : feature2 branch ==> using function by passing the arguments but with no return type.

//Note : Currently we are in main branch with latest Updates and now will create a feature2 branch here.

import java.util.Scanner;

public class MyFuncGitBranches {

    public static void hello(){
        System.out.println("Hello World Am Hazarudin here exploring function/methods  concepts.....");
    }
     //function with arguments and no return type.
    public static void calculateSum(int num1, int num2){
        int sum = num1 + num2;
        System.out.println("Sum of "+num1+" and "+num2+" is : "+sum);
        
    }
    public static void main(String[] args) {
        //hello();
        Scanner sc = new Scanner(System.in);
        System.out.print("Enter a value : ");
        int a = sc.nextInt();
        System.out.print("Enter b value : ");
        int b = sc.nextInt();
        calculateSum(a,b); //function calling with arguments

        sc.close();
    }
}
